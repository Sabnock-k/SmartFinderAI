postgresql pass: password

-- Create database
CREATE DATABASE IF NOT EXISTS campusfinder_ai;
USE campusfinder_ai;

-- Table: users
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE
    full_name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table: found_items
CREATE TABLE found_items (
    found_item_id SERIAL PRIMARY KEY, -- auto-increment integer
    reported_by_user_id INTEGER NOT NULL,
    description TEXT NOT NULL,
    category VARCHAR(100),
    image_url VARCHAR(255),
    location_description VARCHAR(255),
    date_time_found TIMESTAMP NOT NULL,
    is_approved BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    embedding VECTOR(768),  -- requires pgvector extension

    -- Foreign key to users table
    CONSTRAINT fk_reported_by FOREIGN KEY (reported_by_user_id)
        REFERENCES users(user_id)
        ON DELETE CASCADE
);

-- Table: claim_requests
CREATE TABLE claim_requests (
    claim_request_id INT AUTO_INCREMENT PRIMARY KEY,
    found_item_id INT NOT NULL,
    requested_by_user_id INT NOT NULL,
    claim_message TEXT,
    requested_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (found_item_id) REFERENCES found_items(found_item_id) ON DELETE CASCADE,
    FOREIGN KEY (requested_by_user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Table: claimed_items
CREATE TABLE claimed_items (
    claim_id INT AUTO_INCREMENT PRIMARY KEY,
    found_item_id INT NOT NULL,
    claimed_by_user_id INT NOT NULL,
    claimed_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (found_item_id) REFERENCES found_items(found_item_id) ON DELETE CASCADE,
    FOREIGN KEY (claimed_by_user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Table: notifications
CREATE TABLE notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    recipient_user_id INT NOT NULL,
    found_item_id INT NOT NULL,
    claim_request_id INT,
    message TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (recipient_user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (found_item_id) REFERENCES found_items(found_item_id) ON DELETE CASCADE,
    FOREIGN KEY (claim_request_id) REFERENCES claim_requests(claim_request_id) ON DELETE CASCADE
);

-- Table: rewards
CREATE TABLE rewards (
    reward_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    found_item_id INT NOT NULL,
    data_amount_mb INT DEFAULT 0,             -- Internet data in megabytes
    reward_description VARCHAR(255),          -- Optional description
    awarded_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (found_item_id) REFERENCES found_items(found_item_id) ON DELETE CASCADE
);